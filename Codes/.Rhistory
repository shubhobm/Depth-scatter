cov(X)
n = 1e3
set.seed(120214)
# x = rnorm(n)
# X = cbind(x, 2*x)
# X = scale(X, scale=F)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(25,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
# x = runif(n)
# X = cbind(x, x+rnorm(n, sd=.001))
# X = scale(X, scale=F)
# PCA before contamination
(p.pure <- princomp(X)); p.pure$loadings
d1 = EPQD1(X, X)
X1 = X
for(i in 1:nrow(X1)){
X1[i,] = X1[i,]/sqrt(sum(X1[i,]^2))
}
Xrank = X1
Xrank = X1 * (max(d1[,3]) - d1[,3])
cov(Xrank)
a=rchisq(1000,1)
b=rchisq(1000,1)
cov(a/(a+b),b/(a+b))
corr(a/(a+b),b/(a+b))
cor(a/(a+b),b/(a+b))
c=rchisq(1000,1)
s=a+b+c
cor(a/s,b/s)
cor(a/s,b/s,c/s)
cov(cbind(a/s,b/s,c/s))
cor(cbind(a/s,b/s,c/s))
install.packages("fastM")
require(fastM)
TYLERshape(matrix(rnorm(100),ncol=2))
X = matrix(rnorm(1e3), ncol=2)
cov(X)
TYLERshape(X)
X[91:100,] = X[91:100,] + 50
cov(X)
TYLERshape(X)
?TYLERshape
## Sim_influenceplot: Plots to compare influence functions for DCM and SCM
setwd("C:/Study/My projects/Depth-scatter/Codes")
rm(list=ls());
source('misc_functions.R')
library(parallel)
library(doSNOW)
## Functions
## setup 1: Sigma = diag(2,1)
set.seed(02052015)
lam = c(2,1)
Sig = diag(lam)
Z = matrix(rnorm(1e3),ncol=2)
X = Z %*% sqrt(Sig)
# make grid of points
pts = seq(-2, 2, by=.1)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm.S = r^2*abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
library("plot3D", lib.loc="C:/Study/R/R-3.1.1/library")
?persp3D
persp3D(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
persp3D(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)",
theta=45, phi=45)
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
IFnorm.tyler = 4*sqrt(abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2])))
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=NA)
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=F)
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=F,border='black')
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=F,border=gray(.7))
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=F,border=gray(.2))
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=NULL,border=gray(.2))
persp3D(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,colvar=gray(.1),border=gray(.2))
?persp
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,col=gray(.1),border=gray(.2))
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,col=gray(.9),border=gray(.2))
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45,col=gray(.9),border=gray(.3))
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = sqrt(abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid))))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed",
theta=45, phi=45)
persp(pts, pts, matrix(IFnorm.DS, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
IFnorm.tyler = 4*abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp3D(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)",
theta=45, phi=45)
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(mfrow=c(2,2))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for SCM
# get eigenvalues of SCM
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*IFnorm
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
# Influence fn plot for DCM
# get eigenvalues of DCM
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(mfrow=c(1,1))
par()
par(mfrow=c(2,2), oma=c(1,1,1,1))
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(mfrow=c(2,2), oma=c(-1,-1,-1,-1))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
?par
par(mfrow=c(2,2), mai=c(-1,-1,-1,-1))
par(mfrow=c(2,2), mai=rep(0,4))
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
default = par()
par(mfrow=c(2,2), mai=rep(0,4))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for SCM
# get eigenvalues of SCM
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*IFnorm
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
# Influence fn plot for DCM
# get eigenvalues of DCM
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(default)
par()$mai
default = par()
par(mfrow=c(2,2), mai=rep(.5,4))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for SCM
# get eigenvalues of SCM
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*IFnorm
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
# Influence fn plot for DCM
# get eigenvalues of DCM
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(default)
par()$mai
setwd("C:/Study/My projects/Depth-scatter/Codes")
rm(list=ls());
source('misc_functions.R')
library(parallel)
library(doSNOW)
## Functions
## setup 1: Sigma = diag(2,1)
set.seed(02052015)
lam = c(2,1)
Sig = diag(lam)
Z = matrix(rnorm(1e3),ncol=2)
X = Z %*% sqrt(Sig)
# make grid of points
pts = seq(-2, 2, by=.1)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
default = par()
par(mfrow=c(2,2), mai=rep(.5,4))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for SCM
# get eigenvalues of SCM
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*IFnorm
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45,col=gray(.9),border=gray(.3))
# Influence fn plot for DCM
# get eigenvalues of DCM
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="IF(x0)", ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(default)
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
default = par()
par(mfrow=c(2,2), mai=rep(.5,4))
# Sample covariance matrix
r = sqrt(rowSums(xygrid^2))
Ugrid = xygrid / r
IFnorm = abs(Ugrid[,1] * Ugrid[,2] * sqrt(lam[1]*lam[2])/(lam[1] - lam[2]))
IFnorm.Sig = r^2*IFnorm
persp(pts, pts, matrix(IFnorm.Sig, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for SCM
# get eigenvalues of SCM
lam.Zsq = (Z * Z) %*% Sig
sum.lam.Zsq = rowSums(lam.Zsq)
lamS = colMeans(lam.Zsq / sum.lam.Zsq)
# get norms of influence fns for eigenvectors
multS = sqrt(lam[1]*lam[2])/(lamS[1] - lamS[2])
IFnorm.S = sqrt(abs(multS * Ugrid[,1] * Ugrid[,2]))
# plot result
persp(pts, pts, matrix(IFnorm.S, nrow=lengrid, byrow=T),
main="(b)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for Tyler's scatter matrix
IFnorm.tyler = 4*IFnorm
persp(pts, pts, matrix(IFnorm.tyler, nrow=lengrid, byrow=T),
main="(c)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
# Influence fn plot for DCM
# get eigenvalues of DCM
DZ = EPQD(Z, Z)[,3]
DZ = max(Z) - Z
lamDS = colMeans((DZ^2/sum.lam.Zsq) * lam.Zsq)
# get htped at grid points
Dgrid = EPQD(X, xygrid)[,3]
Dgrid = max(Dgrid) - Dgrid
# get norms of influence fns for eigenvectors
mult = sqrt(lam[1]*lam[2])/(lamDS[1] - lamDS[2])
IFnorm.D = abs(mult * xygrid[,1] * xygrid[,2] * Dgrid^2 / diag(xygrid %*% Sig %*% t(xygrid)))
# plot result
persp(pts, pts, matrix(IFnorm.D, nrow=lengrid, byrow=T),
main="(d)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
par(default)
plot(X)
n = 1e3
set.seed(120214)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(25,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
sig = Gamma %*% diag(c(2,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
n = 1e3
set.seed(120214)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(9,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
Sig
sig
serwd('./Codes')
setwd('./Codes')
setwd('/Codes')
getwd()
rm(list=ls());
source('misc_functions.R')
library(parallel)
rm(list=ls());
source('misc_functions.R')
library(parallel)
## Functions
?mclapply
n=20
p=2
iter=10
ncores=2
set.seed(12182014)
v = c(rep(0,p-1), 1)
lam = 1:p
Sigma = diag(lam)
MSE.mat = matrix(0, nrow=length(n), ncol=8)
install.packages("fda.usc")
install.packages("fastM")
install.packages("Rcpp")
