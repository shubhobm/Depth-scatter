<<<<<<< HEAD
cov(X)
n = 1e3
set.seed(120214)
# x = rnorm(n)
# X = cbind(x, 2*x)
# X = scale(X, scale=F)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(25,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
# x = runif(n)
# X = cbind(x, x+rnorm(n, sd=.001))
# X = scale(X, scale=F)
# PCA before contamination
(p.pure <- princomp(X)); p.pure$loadings
d1 = EPQD1(X, X)
X1 = X
for(i in 1:nrow(X1)){
X1[i,] = X1[i,]/sqrt(sum(X1[i,]^2))
}
Xrank = X1
Xrank = X1 * (max(d1[,3]) - d1[,3])
cov(Xrank)
a=rchisq(1000,1)
b=rchisq(1000,1)
cov(a/(a+b),b/(a+b))
corr(a/(a+b),b/(a+b))
cor(a/(a+b),b/(a+b))
c=rchisq(1000,1)
s=a+b+c
cor(a/s,b/s)
cor(a/s,b/s,c/s)
cov(cbind(a/s,b/s,c/s))
cor(cbind(a/s,b/s,c/s))
install.packages("fastM")
require(fastM)
TYLERshape(matrix(rnorm(100),ncol=2))
X = matrix(rnorm(1e3), ncol=2)
cov(X)
TYLERshape(X)
X[91:100,] = X[91:100,] + 50
cov(X)
TYLERshape(X)
?TYLERshape
## Sim_influenceplot: Plots to compare influence functions for DCM and SCM
setwd("C:/Study/My projects/Depth-scatter/Codes")
rm(list=ls());
source('misc_functions.R')
library(parallel)
library(doSNOW)
## Functions
## setup 1: Sigma = diag(2,1)
set.seed(02052015)
lam = c(2,1)
Sig = diag(lam)
Z = matrix(rnorm(1e3),ncol=2)
X = Z %*% sqrt(Sig)
# make grid of points
pts = seq(-2, 2, by=.1)
=======
DZ=1
# calculate required quantities
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^2 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^2 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^2 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
Z = matrix(rnorm(2*ns), ncol=2)
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^2 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ=1
# calculate required quantities
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^2 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
lamS1 = mean(DZ^2*Z2[,1]/Z.Sig.Z)
lamS2 = rho*mean(DZ^2*Z2[,2]/Z.Sig.Z)
(AV1 = rho/(lamS1-lamS2)^2 * mean(DZ^4*Z2[,1]*Z2[,2]/Z.Sig.Z^2))
(AV2 = rho/(1-rho)^2)
AV2/AV1
lamS1
lamS2
mean(DZ^2)
DZ=1
lamS1 = mean(DZ^2*Z2[,1]/Z.Sig.Z)
lamS2 = rho*mean(DZ^2*Z2[,2]/Z.Sig.Z)
lamS1
lamS2
(AV1 = rho/(lamS1-lamS2)^2 * mean(DZ^4*Z2[,1]*Z2[,2]/Z.Sig.Z^2))
(AV2 = rho/(1-rho)^2)
AV2/AV1
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
DZ=1
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.RP(Z,Z, proj=100)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
mean(DZ^4*Z2[,1]*Z2[,2]/Z.Sig.Z^2))
mean(DZ^4*Z2[,1]*Z2[,2]/Z.Sig.Z^2)
DZ = EPQD(Z,Z)[,3]
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ = mdepth.HS(Z,Z)$dep
?mdepth.HS
DZ = mdepth.LD(Z,Z)$dep
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
DZ = mdepth.RP(Z,Z)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ=1
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)
mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2
DZ = mdepth.RP(Z,Z)$dep
DZ = max(DZ) - DZ
mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)
mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2
mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2)
mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z)
head(Z^2)
head(Z*Z)
head(Z2)
ARE.norm(.25, 'MhD', ns=1e4)
rho=.25
DZ = mdepth.RP(Z,Z)$dep
DZ = max(DZ) - DZ
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
DZ=1
# calculate required quantities
Z2 = Z*Z
Z.Sig.Z = Z2[,1] + rho*Z2[,2]
(E1 = mean(DZ^4 * Z2[,1] * Z2[,2] / Z.Sig.Z^2))
(E2 = mean(DZ^2 * (Z2[,1] - rho*Z2[,2]) / Z.Sig.Z)^2)
ARE = E2 / (E1*(1-rho)^2)
ARE
mean(DZ^4)
rho=.5
DZ = mdepth.RP(Z,Z)$dep
DZ = max(DZ) - DZ
mean(DZ^4)
mean(DZ^2)
max(DZ)
min(DZ)
DZ = mdepth.RP(Z,Z)$dep
max(DZ)
DZ = max(DZ) - DZ
max(DZ)
DZ = mdepth.RP(Z,Z)$dep
min(DZ)
library(plot3D)
library(fda.usc)
X = matrix(rnorm(2e3), ncol=2) %*% sqrt(diag(25,1))
X = matrix(rnorm(2e3), ncol=2) %*% sqrt(diag(c(25,1)))
scatterplot3D(X)
scatter3D(X)
?scatter3D
scatter3D(X[,1], X[,2], 0)
scatter3D(X[,1], X[,2], rep(0,nrow(X)))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19)
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5)
pts = seq(-3, 3, by=.2)
>>>>>>> 90bf3163a1edd079615ab7b8b2f3d1f6fad877da
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5)
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5, ADD=TRUE)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5, ADD=TRUE)
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3), ADD=TRUE)
X = matrix(rnorm(2e3), ncol=2) %*% sqrt(diag(c(2,1)))
# make grid of points
pts = seq(-3, 3, by=.2)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3), ADD=TRUE)
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3), add=TRUE)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5, add=TRUE)
# make grid of points
pts = seq(-5, 5, by=.2)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5, add=TRUE)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
scatter3D(X[,1], X[,2], rep(0,nrow(X)), pch=19, cex=.5, add=TRUE)
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)))
?trans3d
points(X[,1], X[,2], rep(0,nrow(X)))
?points3D
points3D(X[,1], X[,2], rep(0,nrow(X)))
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
points3D(X[,1], X[,2], rep(0,nrow(X)))
points3D(X[,1], X[,2], rep(0,nrow(X)), ticktype='detailed')
points3D(X[,1], X[,2], rep(0,nrow(X)), ticktype='detailed', pch=19, cex=.5)
persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
points3D(X[,1], X[,2], rep(0,nrow(X)), ticktype='detailed', pch=19, cex=.5)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
ticktype="detailed", nticks=3,
theta=45, phi=45, col=gray(.9), border=gray(.3))
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
col="lightblue",expand = 0.5,shade = 0.2)
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
col="lightblue",expand = 0.5,shade = 0.2)
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16, cex=.5)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
main="(a)", xlab="x1", ylab="x2", zlab="IF(x0)",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30)
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16, cex=.5)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border=T)
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16, cex=.5)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
obs = trans3d(X[,1], X[,2], rep(0,nrow(X)), p)
points(obs, col="red",pch=16, cex=.5)
?trans2d
?trans3d
points(X[,1], X[,2], rep(0,nrow(X)), add=TRUE)
points3D(X[,1], X[,2], rep(0,nrow(X)), add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep+2, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
points3D(X[,1], X[,2], rep(0,nrow(X)), add=TRUE)
plot(X)
<<<<<<< HEAD
n = 1e3
set.seed(120214)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(25,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
sig = Gamma %*% diag(c(2,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
n = 1e3
set.seed(120214)
Gamma = matrix(c(1,-1,1,1), nrow=2)/sqrt(2)
sig = Gamma %*% diag(c(9,1)) %*% t(Gamma)
X = my.mvrnorm(n, mu=c(0,0), Sig=2*sig)
uX = X / sqrt(rowSums(X^2))
dX = EPQD(X, X)[,3]
Xrank = uX * (max(dX) - dX)
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
Sig
sig
serwd('./Codes')
setwd('./Codes')
setwd('/Codes')
getwd()
rm(list=ls());
source('misc_functions.R')
library(parallel)
rm(list=ls());
source('misc_functions.R')
library(parallel)
## Functions
?mclapply
n=20
p=2
iter=10
ncores=2
set.seed(12182014)
v = c(rep(0,p-1), 1)
lam = 1:p
Sigma = diag(lam)
MSE.mat = matrix(0, nrow=length(n), ncol=8)
install.packages("fda.usc")
install.packages("fastM")
install.packages("Rcpp")
=======
?points3D
X[,1]
summary(X[,1])
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
points3D(X[,1], X[,2], rep(0,nrow(X)), add=TRUE)
points3D(X[,1], X[,2], rep(0,nrow(X)))
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black', add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
points3D(X[,1], X[,2], rep(1,nrow(X)), add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
points3D(X[,1], X[,2], rep(1,nrow(X)),
pch=19, cex=.5, add=TRUE)
surf3D(pts, pts, rep(1, nrow(X)), add=TRUE)
?surf3D
persp3D(pts, pts, rep(1, nrow(X)), add=TRUE)
persp3D(pts, pts, 1, add=TRUE)
persp3D(pts, pts, 1,
col="lightblue", add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth",
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
persp3D(pts, pts, 1,
col="lightblue", add=TRUE)
points3D(X[,1], X[,2], rep(1,nrow(X)),
pch=19, cex=.5, add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(0,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
persp3D(pts, pts, 1,
col="lightblue", add=TRUE)
points3D(X[,1], X[,2], rep(1,nrow(X)),
pch=19, cex=.5, add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=30, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
X = matrix(rnorm(2e3), ncol=2) %*% sqrt(diag(c(2,1)))
# make grid of points
pts = seq(-3, 3, by=.2)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
points3D(X[,1], X[,2], -1,
pch=19, cex=.5, add=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, add=TRUE)
X = matrix(rnorm(2e3), ncol=2) %*% sqrt(diag(c(1,1/2)))
# make grid of points
pts = seq(-3, 3, by=.2)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
persp3D(pts, pts, 1,
col="lightblue", add=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, add=TRUE)
persp3D(pts, pts, -1,
col="lightblue", add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col="lightblue",expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, add=TRUE)
?points3D
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=adjustcolot("lightblue",.5),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=adjustcolor("lightblue",.5),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=adjustcolor("lightblue",1),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=adjustcolor("lightblue",.1),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .5),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
library(scales)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .5),expand = 0.5,shade = 0.2,
theta=30, phi=10, border='black')
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2))
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, colkey=NULL, add=TRUE)
?points3D
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2))
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, colvar=NULL, add=TRUE)
X = matrix(rnorm(1e3), ncol=2) %*% sqrt(diag(c(1,1/2)))
# make grid of points
pts = seq(-3, 3, by=.2)
lengrid = length(pts)
xcoord = rep(pts, rep(lengrid,lengrid))
ycoord = rep(pts, lengrid)
xygrid = cbind(xcoord,ycoord)
rm(xcoord,ycoord)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2))
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, colvar=NULL, pch=.3, add=TRUE)
contour3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T), add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, colvar=NULL, pch=.3, add=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, colvar=NULL, pch=.3, col='red', add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, pch=.3, col='red', add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE,
mai=c(.5,.5,.5,.5))
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, pch=.3, col='red', add=TRUE)
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE,
mar=c(.5,.5,.5,.5))
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE,
mar=c(.1,.1,.1,.1))
default=par()
par(mai=rep(.5,4))
p = persp3D(pts, pts, matrix(mdepth.RP(xygrid,X)$dep, nrow=lengrid, byrow=T),
xlab="x1", ylab="x2", zlab="Depth", zlim=c(-1,1),
col=alpha("lightblue", .2),expand = 0.5,shade = 0.2,
theta=30, phi=10, border=alpha("black", .2), contour=TRUE)
points3D(X[,1], X[,2], rep(-1,nrow(X)),
pch=19, cex=.5, pch=.3, col='red', add=TRUE)
par(default)
>>>>>>> 90bf3163a1edd079615ab7b8b2f3d1f6fad877da
